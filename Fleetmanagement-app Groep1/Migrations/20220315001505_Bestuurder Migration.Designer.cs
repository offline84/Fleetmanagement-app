// <auto-generated />
using System;
using Fleetmanagement_app_Groep1.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fleetmanagement_app_Groep1.Migrations
{
    [DbContext(typeof(FleetmanagerContext))]
    [Migration("20220315001505_Bestuurder Migration")]
    partial class BestuurderMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Bestuurder", b =>
                {
                    b.Property<string>("PersoneelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Achternaam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("GeboorteDatum")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsGearchiveerd")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LaatstGeupdate")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.Property<string>("Naam")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Rijksregisternummer")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("PersoneelsId");

                    b.ToTable("Bestuurder");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Koppeling", b =>
                {
                    b.Property<Guid>("KoppelingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PersoneelsId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("KoppelingsId");

                    b.HasIndex("PersoneelsId")
                        .IsUnique();

                    b.ToTable("Koppeling");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Rijbewijs", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BestuurderPersoneelsId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TypeRijbewijs")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("Id");

                    b.HasIndex("BestuurderPersoneelsId");

                    b.ToTable("Rijbewijs");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Bestuurder", b =>
                {
                    b.OwnsOne("Fleetmanagement_app_Groep1.Entities.Adres", "Adres", b1 =>
                        {
                            b1.Property<string>("BestuurderPersoneelsId")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Huisnummer")
                                .HasColumnType("int");

                            b1.Property<int>("Postcode")
                                .HasMaxLength(50)
                                .HasColumnType("int");

                            b1.Property<string>("Stad")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Straat")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("BestuurderPersoneelsId");

                            b1.ToTable("Bestuurder");

                            b1.WithOwner("Bestuurder")
                                .HasForeignKey("BestuurderPersoneelsId");

                            b1.Navigation("Bestuurder");
                        });

                    b.Navigation("Adres");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Koppeling", b =>
                {
                    b.HasOne("Fleetmanagement_app_Groep1.Entities.Bestuurder", "Bestuurder")
                        .WithOne("Koppeling")
                        .HasForeignKey("Fleetmanagement_app_Groep1.Entities.Koppeling", "PersoneelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bestuurder");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Rijbewijs", b =>
                {
                    b.HasOne("Fleetmanagement_app_Groep1.Entities.Bestuurder", null)
                        .WithMany("Rijbewijzen")
                        .HasForeignKey("BestuurderPersoneelsId");
                });

            modelBuilder.Entity("Fleetmanagement_app_Groep1.Entities.Bestuurder", b =>
                {
                    b.Navigation("Koppeling");

                    b.Navigation("Rijbewijzen");
                });
#pragma warning restore 612, 618
        }
    }
}
